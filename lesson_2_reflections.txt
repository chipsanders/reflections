What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository you are adding the files and 
code necessasry for git to work with that folder. You 
need to do it so that git will work with the documents 
within that folder.

How is the staging area different from the working directory
and the repository? What value to you think it offers?

The staging area is different from the working directory and
the repository in that it is an area that allows you to 
do things before they become permanent.  The value it offers
is the ability to do work without making permanent changes.

How can you use the staging area to make sure you have one commit per 
logical change?

You can add all the files that are part of the logical change to the
staging area before you commit. That way they will all be included in
your commit. So when you compare them to previous or future changes
you will see all the changes logically necessary to understand
the change.

What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?

Branches would be helpful when you are happy with the existing master 
branch, but want to make changes, either as an experiment, or as a 
separate version of the program that will stand alone and not be merged 
with the master at a later date.

How do the diagrams help you visualize the branch structure?

The diagrams show a linear representation of the organization of the 
commit structure. You can see at a glance the various branches, heads, 
and commit and how they relate.

What is the result of merging two branches together? Why do we represent 
it in the diagram the way we do?

When two branches are merged together the result is that the lines of 
code that have been added in one branch are added to the merged branch
the lines of code that have been deleted in one branch are deleted from
the merged branch.  The lines of code that exist in both branches remain
the same. We represent it in the diagram to include a map of all the 
commits with each branch as well as the point the branch was created
and the point the branch was merged. This contains a more detailed
and useful graphical representation of what occured with the branches.